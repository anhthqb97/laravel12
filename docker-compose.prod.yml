version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: app
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
    volumes:
      - ./docker/cron/crontab:/etc/crontabs/root
      - ./src/.env:/var/www/html/.env:ro
    depends_on:
      - mysql
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "php", "artisan", "migrate:status"]
      interval: 30s
      retries: 3

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/certbot
    depends_on:
      - app
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook 'docker compose restart nginx'; done"
    restart: always


  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: very-strong-root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: very-strong-password
    volumes:
      - dbdata:/var/lib/mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      retries: 5

volumes:
  dbdata:
  certbot-etc:
  certbot-var:
  webroot: